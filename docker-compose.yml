services:
  eureka:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./eureka
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/eureka
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://eureka:19090/eureka/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
    restart: always

  gateway:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./gateway
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/gateway
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      eureka:
        condition: service_healthy

  user:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./user
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/user
    env_file:
      - .env
    depends_on:
      eureka:
        condition: service_healthy

  review-redis:
    image: "redis/redis-stack"
    container_name: review-redis-prod
    restart: always
    ports:
      - "${REVIEW_REDIS_PORT}:6379"
    environment:
      - REDIS_ARGS=--requirepass ${REVIEW_REDIS_PASSWORD}
    volumes:
      - review-redis-prod-data:/data
      - review-redis-config-file:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  review:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./review
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/review
    env_file:
      - .env
    depends_on:
      eureka:
        condition: service_healthy
      review-redis:
        condition: service_healthy

  performance-redis:
    image: "redis/redis-stack"
    container_name: performance-redis-prod
    restart: always
    ports:
      - "${PERFORMANCE_REDIS_PORT}:6379"
    environment:
      - REDIS_ARGS=--requirepass ${PERFORMANCE_REDIS_PASSWORD}
    volumes:
      - performance-redis-prod-data:/data
      - performance-redis-config-file:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  performance:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./performance
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/performance
    env_file:
      - .env
    depends_on:
      eureka:
        condition: service_healthy
      performance-redis:
        condition: service_healthy

  order-redis:
    image: "redis/redis-stack"
    container_name: order-redis-prod
    restart: always
    ports:
      - "${ORDER_REDIS_PORT}:6379"
    environment:
      - REDIS_ARGS=--requirepass ${ORDER_REDIS_PASSWORD}
    volumes:
      - order-redis-prod-data:/data
      - order-redis-config-file:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  order:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./order
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/order
    env_file:
      - .env
    depends_on:
      eureka:
        condition: service_healthy
      order-redis:
        condition: service_healthy

  payment:
    build:
      dockerfile: Dockerfile
      args:
        - FILE_DIRECTORY=./payment
    image: ${ECR_REGISTRY}/${ECR_NAMESPACE}/payment
    env_file:
      - .env
    depends_on:
      eureka:
        condition: service_healthy

volumes:
  review-redis-prod-data:
  review-redis-config-file:
  performance-redis-prod-data:
  performance-redis-config-file:
  order-redis-prod-data:
  order-redis-config-file:
