version: "3.8"
services:
  review-db:
    image: "postgres"
    container_name: review-db-local-1
    restart: always
    ports:
      - "${REVIEW_DB_PORT}:5432"
    volumes:
      - review-db-local-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${REVIEW_POSTGRES_USER}
      - POSTGRES_PASSWORD=${REVIEW_POSTGRES_PASSWORD}
    env_file:
      - .env
  review-redis:
    image: "redis/redis-stack"
    container_name: review-redis-local-1
    restart: always
    ports:
      - "${REVIEW_REDIS_PORT}:6379"
    environment:
      REDIS_ARGS: "--requirepass ${REVIEW_REDIS_PASSWORD}"
    volumes:
      - review-redis-local-data:/data
      - review-redis-config-file:/usr/local/etc/redis/redis.conf
  zookeeper:
    image: wurstmeister/zookeeper
    platform: linux/amd64
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    platform: linux/amd64
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    platform: linux/amd64
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: "false"




volumes:
  review-db-local-data:
  review-redis-local-data:
  review-redis-config-file: