spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${REVIEW_PROD_DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
  data:
    redis:
      host: ${REVIEW_REDIS_HOST}
      port: ${REVIEW_REDIS_PORT}
      username: ${REVIEW_REDIS_USERNAME}
      password: ${REVIEW_REDIS_PASSWORD}

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_HOST}:19090/eureka/


management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: "/api/v1/reviews/actuator"
  endpoint:
    health:
      show-details: always

    prometheus:
      enabled: true
